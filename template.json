{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "publicSshKey": {
            "type": "string"
        },
        "autoShutdownNotificationEmail": {
            "type": "string"
        },
        "autoShutdownTime": {
            "type": "string",
            "defaultValue": "03:00"
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "VM-Administrator"
        },
        "adminPassword": {
            "type": "secureString",
            "defaultValue": "[concat('aA1.', uniqueString(resourceGroup().id))]"
        },
        "virtualMachineSize": {
            "type": "string",
            "allowedValues": [
                "Standard_D2s_v3",
                "Standard_D4s_v3",
                "Standard_D8s_v3"
            ],
            "defaultValue": "Standard_D4s_v3"
        },
        "branch": {
            "type": "string",
            "defaultValue": "enable_pwd"
        }
    },
    "variables": {
        "addressPrefixes": [
            "10.0.2.0/24"
        ],
        "autoShutdownNotificationLocale": "en",
        "autoShutdownNotificationStatus": "Enabled",
        "autoShutdownStatus": "Enabled",
        "autoShutdownTimeZone": "W. Europe Standard Time",
        "enableAcceleratedNetworking": "[if(equals(parameters('virtualMachineSize'), 'Standard_D2s_v3'), 'false', 'true')]",
        "location": "[resourceGroup().location]",
        "networkInterfaceName": "[toLower( concat( variables('virtualMachineName'), uniqueString(resourceGroup().id) ) )]",
        "networkSecurityGroupName": "[concat( variables('virtualMachineName'), '-nsg')]",
        "networkSecurityGroupRules": [
            {
                "name": "SSH",
                "properties": {
                    "priority": 300,
                    "protocol": "TCP",
                    "access": "Allow",
                    "direction": "Inbound",
                    "sourceAddressPrefix": "*",
                    "sourcePortRange": "*",
                    "destinationAddressPrefix": "*",
                    "destinationPortRange": "22"
                }
            }
        ],
        "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
        "osDiskType": "Premium_LRS",
        "publicIpAddressName": "[concat( variables('virtualMachineName'), '-ip')]",
        "publicIpAddressSku": "Basic",
        "publicIpAddressType": "Dynamic",
        "subnetName": "default",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
        "subnets": [
            {
                "name": "default",
                "properties": {
                    "addressPrefix": "10.0.2.0/24"
                }
            }
        ],
        "virtualNetworkName": "[concat( variables('virtualMachineName'), '-vnet')]",
        "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "virtualMachineName": "[resourceGroup().name]"

    },
    "resources": [
        {
            "name": "[variables('networkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "enableAcceleratedNetworking": "[variables('enableAcceleratedNetworking')]",
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "name": "[variables('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": "[variables('networkSecurityGroupRules')]"
            }
        },
        {
            "name": "[variables('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-09-01",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": "[variables('addressPrefixes')]"
                },
                "subnets": "[variables('subnets')]"
            }
        },
        {
            "name": "[variables('publicIpAddressName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2019-02-01",
            "location": "[variables('location')]",
            "properties": {
                "publicIpAllocationMethod": "[variables('publicIpAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[variables('virtualMachineName')]"
                }
            },
            "sku": {
                "name": "[variables('publicIpAddressSku')]"
            }
        },
        {
            "name": "[variables('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-Datacenter-Core-with-Containers",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2015-06-15",
            "name": "[concat(variables('virtualMachineName'),'/script1')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachineName'))]"
            ],
            "location": "[resourceGroup().location]",
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[concat('https://raw.githubusercontent.com/cosmoconsult/remote-dev/', parameters('branch'), '/InitVM.ps1')]"
                    ]
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File InitVM.ps1 -branch \"', parameters('branch') , '\" -sshKey \"', parameters('publicSshKey'), '\"')]"
                }
            }
        },
        {
            "name": "[concat('shutdown-computevm-', variables('virtualMachineName'))]",
            "type": "Microsoft.DevTestLab/schedules",
            "apiVersion": "2018-09-15",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachineName'))]"
            ],
            "properties": {
                "status": "[variables('autoShutdownStatus')]",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "[parameters('autoShutdownTime')]"
                },
                "timeZoneId": "[variables('autoShutdownTimeZone')]",
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachineName'))]",
                "notificationSettings": {
                    "status": "[variables('autoShutdownNotificationStatus')]",
                    "notificationLocale": "[variables('autoShutdownNotificationLocale')]",
                    "timeInMinutes": 30,
                    "emailRecipient": "[parameters('autoShutdownNotificationEmail')]"
                }
            }
        }
    ],
    "outputs": {
    }
}
